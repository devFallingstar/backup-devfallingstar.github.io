---
layout: post
title: "파이썬에서 변수 정수 값을 대입할 때의 주의할 점(shallow copy and deep copy)"
date: "2017-07-24 18:52:58 +0900"
categories: [Development", "Programming", "Python"]
---
## 얕은 복사(shallow copy)와 깊은 복사(deep copy)
파이썬은 최근에 생긴 언어인 만큼 기존의 언어와는 다른 점이 많다.  
가장 큰 차이는 바로 얕은 복사와 깊은 복사다.  

list 변수 a와 b가 있고, b는 [1,2,3]라는 값을 가지고 있을 때,
a = b라는 코드는 객체 자체를 복사하고(a가 b의 주소값을 참조하게 하고),
a = b[0:-1]라는 코드는 b가 가지고 있는 값을 복사한다(a가 b와 다른 주소값을 가지고 한다).

정리하자면,

{% highlight python %}
a = []
b = [1,2,3]

if a == b:
  print("값이 같다")
if a is b:
  print("참조하는 주소가 같다")
{% endhighlight %}

라고 표현할 수 있다.

# plus, 중요한 내용!!

다음과 같은 코드를 작성하면 a와 b의 주소값은 같게 나온다!!
{% highlight python %}
a = 1
b = 1
{% endhighlight %}
분명 1이라는 같은 값을 가졌지만, 분명 객체는 다르다! 근데 왜 주소값이 같게 나올까?

그것은 파이썬의 특징과 관계되어있다.

파이썬은 자주 사용하는 값에 대해서 객체를 미리 생성해놓고 공유하는 방식을 사용한다.
파이썬 3.5를 기준으로 -5부터 +256까지가 대상 객체이다.
따라서, a에 1을 할당한다면, 변수 a에 대한 공간을 만들고, 그 공간에 1을 대입하는 것이 아닌,
변수 a가 미리 할당된 1에 대한 주소값을 참조하게 된다는 것이다.

따라서, 위와 같은 정수값을 대입하도록 시도한다면, 그 값을 담기 위한 변수가 따로 만들어지는 것이 아니라,
미리 만들어진 정수값에 대한 변수의 주소를 참조하도록 설정된다는 것이다.
